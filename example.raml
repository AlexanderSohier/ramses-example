#%RAML 0.8
---
title: Example REST API
documentation:
  - title: Home
    content: |
      Welcome to the example API.
baseUri: http://{host}:{port}/{version}
version: v1
mediaType: application/json
protocols: [HTTP, HTTPS]
securedBy: [my_ticket_auth]

securitySchemes:
  my_token_auth:
    description: Authorization header token policy
    type: x-ApiKey
  my_ticket_auth:
    description: Standard Pyramid Auth Ticket policy
    type: x-Ticket
    settings:
      secret: auth_tkt_secret
      hashalg: sha512
      cookie_name: ramses_auth_tkt
      http_only: 'true'
  authenticated_read_acl:
    description: ACL that allows reads to authenticated users
    type: x-ACL
    settings:
      collection: |
        allow admin all
        allow authenticated get
      item: |
        allow admin all
        allow authenticated get
        allow {{user_himself}} patch

/stories:
  securedBy: [null]
  displayName: Old stories
  get:
    description: Get all stories
  post:
    description: Add new story
    body:
      application/json:
        schema: !include schemas/story.json
  patch:
    description: Update multiple story
  delete:
    description: delete multiple story

  /{id}:
    displayName: One good story
    get:
      description: Get a particular story
    delete:
      description: Delete a particular story
    patch:
      description: Update a particular story

/users:
  securedBy: [authenticated_read_acl]
  displayName: Good users
  get:
    description: Get all users
  post:
    description: Add new user
    body:
      application/json:
        schema: !include schemas/user.json

  /{username}:
    displayName: One good user
    get:
      description: Get a particular user
    patch:
      description: Update a particular story
    delete:
      description: Delete a particular story

    /settings:
      displayName: Old settings
      get:
        description: Get all settings
      post:
        description: Change settings

    /groups:
      displayName: Old groups
      get:
        description: Get all groups
      post:
        description: Change groups

    /profile:
      displayName: User profile
      get:
        description: Get user profile
      post:
        description: Create profile
        body:
          application/json:
            schema: !include schemas/profile.json
      put:
        description: Update profile
